{"version":3,"sources":["assets/images/Ripple-1s-200px.svg","components/common/formsControls/formsControls.js","components/common/formsControls/formsControls.module.css","serviceWorker.js","api/api.js","data/profile-reducer.js","data/sidebar-reducer.js","utils/object-helpers.js","data/users-reducer.js","data/auth-reducer.js","data/redux-store.js","components/header/header.js","components/header/headerContainer.js","components/side-bar/sideBar.js","components/common/preloader/preloader.js","components/pages/profile/my-profile-info/profileStatus.js","components/pages/profile/my-profile-info/profileDataForm.js","components/pages/profile/my-profile-info/profileInfo.js","components/pages/profile/my-posts/post/post.js","components/pages/profile/my-posts/myPosts.js","components/pages/profile/my-posts/myPostsContainer.js","components/pages/profile/profile.js","components/pages/profile/profileContainer.js","components/pages/news/news.js","components/pages/music/music.js","components/pages/settings/settings.js","components/users/users.js","components/users/usersContainer.js","components/login/login.js","App.js","index.js","utils/validators/validators.js","hoc/withAuthRedirect.js","data/dialogs-reducer.js"],"names":["module","exports","Textarea","input","meta","props","hasError","touched","error","className","styles","formControl","Input","createField","placeholder","name","validators","component","text","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","unfollowUser","userId","delete","followUser","post","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","email","password","rememberMe","captcha","securityAPI","initialState","posts","id","message","likesCount","setStatus","type","getUserProfile","dispatch","a","profileReducer","state","action","newPost","newPostText","photos","sidebarReducer","updateObjectInArray","items","itemId","objectPropName","newObjectProps","map","item","users","totalUsersQuantity","isFetching","isFollowingInProgress","followSuccess","unfollowSuccess","setUsers","toggleIsFetching","toggleIsFollowingInProgress","followUnfollowFlow","apiMethod","actionCreator","resultCode","usersReducer","followed","count","filter","login","isAuth","captchaUrl","setAuthUserData","getCaptchaUrlSuccess","authorizeMe","getCaptchaUrl","url","authReducer","reducers","combineReducers","messagesPage","dialogsReducer","profilePage","sidebar","usersPage","auth","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMidleware","Header","src","alt","onClick","logout","to","HeaderContainer","this","React","Component","connect","SideBar","Preloader","style","backgroundColor","preloader","ProfileStatus","editMode","onStatusChange","e","setState","currentTarget","value","isOwner","prevProps","prevState","onDoubleClick","activateEditMode","bind","onChange","autoFocus","onBlur","deactivateEditMode","ProfileDataFormReduxForm","reduxForm","handleSubmit","onSubmit","formSummaryError","Object","keys","contacts","key","Contact","contactTitle","contactValue","ProfileData","goToEditMode","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","ProfileInfo","useState","setEditMode","large","target","files","length","initialValues","Post","like","maxLength30","maxLengthCreator","AddNewPostFormRedux","Field","validate","required","MyPosts","values","addPost","MyPostsContainer","addPostActionCreator","Profile","ProfileContainer","params","authorizedUserID","refreshProfile","snapshot","file","getState","stopSubmit","_error","messages","Promise","reject","withRouter","withAuthRedirect","News","Music","Settings","Users","pagesQuantity","Math","ceil","pages","i","push","selectedPages","slice","p","onPageChanged","u","small","disabled","some","unfollow","follow","UsersContainer","pageNumber","setCurrentPage","totalCount","LoginReduxForm","btn","errorMessage","MessagesContainer","lazy","App","exact","path","render","fallback","Login","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","maxLength","mapStateToPropsForRedirect","RedirectComponent","dialogs","sendMessageActionCreator","newMessageBody","body"],"mappings":"6GAAAA,EAAOC,QAAU,IAA0B,6C,2LCK9BC,EAAW,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCAC3CC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACI,yBAAKC,UAAWC,IAAOC,YAAa,KAAML,EAAWI,IAAOF,MAAQ,KAChE,6BAAK,8CAAcL,EAAWE,KAC7BC,GAAY,8BAAOF,EAAKI,SAMxBI,EAAQ,SAAC,GAA6B,IAA5BT,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCACxCC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACI,yBAAKC,UAAWC,IAAOC,YAAa,KAAML,EAAWI,IAAOF,MAAQ,KAChE,6BAAK,2CAAWL,EAAWE,KAC1BC,GAAY,8BAAOF,EAAKI,SAMxBK,EAAc,SAACC,EAAaC,EAAMC,EAAYC,GAAhC,IAA2CZ,EAA3C,uDAAmD,GAAIa,EAAvD,uDAA6D,GAA7D,OACvB,6BACI,kBAAC,IAAD,eAAOJ,YAAaA,EACZC,KAAMA,EACNC,WAAYA,EACZC,UAAWA,GACPZ,EAJZ,CAKQa,KAAMA,Q,yOCjCtBlB,EAAOC,QAAU,CAAC,YAAc,mCAAmC,IAAM,2BAA2B,MAAQ,6BAA6B,iBAAmB,0C,kLCWxIkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,kECjBAC,E,OAAWC,OAAa,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CAAC,UAAW,0CAIZC,EAAU,CACnBC,SADmB,WACuB,IAAjCC,EAAgC,uDAAlB,EAAGC,EAAe,uDAAJ,GACjC,OAAOR,EAASS,IAAT,qBAA2BF,EAA3B,kBAAgDC,IAClDE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAEnCC,aALmB,SAKNC,GACT,OAAOd,EAASe,OAAT,kBAA2BD,IACjCJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAE/BI,WATmB,SASRF,GACP,OAAOd,EAASiB,KAAT,kBAAyBH,GAAS,IACxCJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAE/BM,WAbmB,SAaRJ,GAEP,OADAK,QAAQC,KAAK,yCACNC,EAAWH,WAAWJ,KAIxBO,EAAY,CACrBH,WADqB,SACVJ,GACP,OAAOd,EAASS,IAAI,YAAYK,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAE/BU,UALqB,SAKXR,GACN,OAAOd,EAASS,IAAI,mBAAmBK,GACtCJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAE/BW,aATqB,SASRC,GACT,OAAOxB,EAASyB,IAAT,kBAAgC,CAAED,OAAOA,IAC/Cd,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAE/Bc,UAbqB,SAaXC,GACN,IAAMC,EAAW,IAAIC,SAErB,OADAD,EAASE,OAAO,QAASH,GAClB3B,EAASyB,IAAT,iBAA+BG,EAAU,CAACxB,QAAS,CACtD,eAAgB,yBACfM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAEnCmB,YApBqB,SAoBTC,GACR,OAAOhC,EAASyB,IAAT,WAAyBO,GAC/BtB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAItBqB,EAAU,WAEf,OAAOjC,EAASS,IAAT,YACNC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAHtBqB,EAAU,SAKbC,EAAOC,GAA2C,IAAjCC,EAAgC,wDAAdC,EAAc,uDAAN,KAC7C,OAAOrC,EAASiB,KAAK,cAAe,CAACiB,QAAOC,WAAUC,aAAYC,YACjE3B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAPtBqB,EAAU,WAUf,OAAOjC,EAASe,OAAO,eACtBL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAItB0B,EAAc,WAEnB,OAAOtC,EAASS,IAAI,6BACnBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC/D/B2B,EAAe,CACfC,MACJ,CACI,CAACC,GAAG,EAAGC,QAAQ,yCAA0CC,WAAY,GACrE,CAACF,GAAG,EAAGC,QAAQ,0CAA2CC,WAAY,GACtE,CAACF,GAAG,EAAGC,QAAQ,YAAaC,WAAY,IAExCX,QAAS,KACTR,OAAQ,IAyCCoB,EAAY,SAACpB,GAAD,MAAa,CAAEqB,KApDrB,aAoDuCrB,WAI7CsB,EAAgB,SAAChC,GAC1B,8CAAO,WAAOiC,GAAP,eAAAC,EAAA,sEACgB3B,EAAWH,WAAWJ,GADtC,OACGF,EADH,OAECmC,EATgC,CAAEF,KAnDrB,mBAmD6Cb,QASlCpB,IAFzB,2CAAP,uDA4CWqC,EAvFQ,WAAmC,IAAlCC,EAAiC,uDAAzBX,EAAcY,EAAW,uCACrD,OAAOA,EAAON,MACV,IAlBS,WAmBL,IAAIO,EAAU,CACVX,GAAI,EACJC,QAASS,EAAOE,YAChBV,WAAY,GAEhB,OAAO,2BACAO,GADP,IAEIV,MAAM,GAAD,mBAAMU,EAAMV,OAAZ,CAAmBY,IACxBC,YAAY,KAIpB,IA9BiB,mBA+Bb,OAAO,2BACAH,GADP,IACclB,QAASmB,EAAOnB,UAGlC,IAlCW,aAmCP,OAAO,2BACAkB,GADP,IACc1B,OAAQ2B,EAAO3B,SAGjC,IAtCmB,qBAuCf,OAAO,2BACA0B,GADP,IACclB,QAAQ,2BAAKkB,EAAMlB,SAAZ,IAAqBsB,OAAQH,EAAOG,WAGjE,QACI,OAAOJ,IClDXX,EAAe,GAMJgB,EAJQ,WAAkC,IAAjCL,EAAgC,uDAAxBX,EAC5B,OAAOW,GCHEM,EAAsB,SAACC,EAAOC,EAAQC,EAAgBC,GAC/D,OAAOH,EAAMI,KAAI,SAAAC,GACT,OAAIA,EAAKH,KAAoBD,EACtB,2BAAII,GAASF,GAEjBE,MCQXvB,EAAe,CACfwB,MAAO,GACPvD,SAAU,GACVwD,mBAAoB,EACpBzD,YAAa,EACb0D,YAAY,EACZC,sBAAuB,IA6CdC,EAAgB,SAACrD,GAAD,MAAY,CAAC+B,KA5D3B,SA4DyC/B,WAE3CsD,EAAkB,SAACtD,GAAD,MAAY,CAAC+B,KA7D3B,WA6D2C/B,WAE/CuD,EAAW,SAACN,GAAD,MAAW,CAAClB,KA9DnB,WA8DmCkB,UAMvCO,EAAmB,SAACL,GAAD,MAAiB,CAACpB,KAjEvB,qBAiEiDoB,eAE/DM,EAA8B,SAACN,EAAYnD,GAAb,MAAwB,CAAC+B,KAlE5B,kCAkEmEoB,aAAYnD,WAejH0D,EAAkB,uCAAG,WAAOzB,EAAUjC,EAAQ2D,EAAWC,GAApC,SAAA1B,EAAA,6DACvBD,EAASwB,GAA4B,EAAMzD,IADpB,SAEN2D,EAAU3D,GAFJ,OAGK,IAHL,OAGV6D,YAAmB5B,EAAS2B,EAAc5D,IACnDiC,EAASwB,GAA4B,EAAOzD,IAJzB,2CAAH,4DAqBT8D,EA1FM,WAAmC,IAAlC1B,EAAiC,uDAAzBX,EAAcY,EAAW,uCACnD,OAAOA,EAAON,MACV,IApBO,SAqBH,OAAO,2BACAK,GADP,IAEIa,MAAOP,EAAoBN,EAAMa,MAAOZ,EAAOrC,OAAQ,KAAM,CAAC+D,UAAU,MAQhF,IA9BS,WA+BL,OAAO,2BACA3B,GADP,IAEIa,MAAOP,EAAoBN,EAAMa,MAAOZ,EAAOrC,OAAQ,KAAM,CAAC+D,UAAU,MAEhF,IAlCS,WAmCL,OAAO,2BAAI3B,GAAX,IAAkBa,MAAOZ,EAAOY,QAEpC,IApCiB,mBAqCb,OAAO,2BAAIb,GAAX,IAAkB3C,YAAa4C,EAAO5C,cAE1C,IAtCsB,wBAuClB,OAAO,2BAAI2C,GAAX,IAAkBc,mBAAoBb,EAAO2B,QAEjD,IAxCmB,qBAyCf,OAAO,2BAAI5B,GAAX,IAAkBe,WAAWd,EAAOc,aAExC,IA1CgC,kCA2C5B,OAAO,2BAAIf,GAAX,IACIgB,sBAAuBf,EAAOc,WAAP,sBACjBf,EAAMgB,uBADW,CACYf,EAAOrC,SACxCoC,EAAMgB,sBAAsBa,QAAO,SAAAtC,GAAE,OAAIA,IAAOU,EAAOrC,YAGjE,QACI,OAAOoC,ICtDfX,EAAe,CACfzB,OAAS,KACToB,MAAO,KACP8C,MAAO,KACPC,QAAQ,EACRC,WAAY,MAgBHC,EAAkB,SAACrE,EAAQoB,EAAO8C,EAAOC,GAAvB,MAAmC,CAAEpC,KAxB9C,gBAwBmEjC,KAAM,CAACE,SAAQoB,QAAO8C,QAAOC,YAEzGG,EAAuB,SAACF,GAAD,MAAiB,CAACrC,KAzBtB,0BAyBqDjC,KAAM,CAACsE,gBAE/EG,EAAc,yDACvB,WAAOtC,GAAP,uBAAAC,EAAA,sEACqBf,IADrB,OAEgC,KADxBrB,EADR,QAEiB+D,aAAmB,EACK/D,EAAKA,KAAzB6B,EADc,EACdA,GAAIP,EADU,EACVA,MAAO8C,EADG,EACHA,MAChBjC,EAASoC,EAAgB1C,EAAIP,EAAO8C,GAAO,KAJ3D,2CADuB,uDA0BdM,EAAgB,WACzB,8CAAO,WAAOvC,GAAP,iBAAAC,EAAA,sEACgBV,IADhB,OACG1B,EADH,OAEGsE,EAAatE,EAAK2E,IAChBxC,EAASqC,EAAqBF,IAHnC,2CAAP,uDAiBWM,EA7DK,WAAmC,IAAlCtC,EAAiC,uDAAzBX,EAAcY,EAAW,uCAClD,OAAOA,EAAON,MACV,IAbc,gBAcd,IAbwB,0BAcpB,OAAO,2BACAK,GACAC,EAAOvC,MAGtB,QACI,OAAOsC,I,kBCfXuC,EAAWC,YAAgB,CAC3BC,aAAcC,IACdC,YAAa5C,EACb6C,QAASvC,EACTwC,UAAWnB,EACXoB,KAAMR,EACNS,KAAMC,MAIJC,EAAmBvG,OAAOwG,sCAAwCC,IAClEC,EAAQC,YAAYd,EAAUU,EAAiBK,YAAgBC,OAGrE7G,OAAO0G,MAAQA,EAEAA,Q,kGCRAI,I,OAbA,SAAC7H,GACZ,OACI,4BAAQI,UAAU,UACd,yBAAK0H,IAAI,wGAAwGC,IAAI,sBACrH,yBAAK3H,UAAU,cACTJ,EAAMoG,OACF,6BAAMpG,EAAMmG,MAAZ,MAAqB,4BAAQ6B,QAAShI,EAAMiI,QAAvB,YACrB,kBAAC,KAAD,CAASC,GAAI,UAAb,a,SCNhBC,G,kLAGEC,KAAKpI,MAAMwG,gB,+BAGX,OAAO,kBAAC,GAAW4B,KAAKpI,W,GANFqI,IAAMC,WAerBC,iBALS,SAAClE,GAAD,MAAY,CAChC+B,OAAQ/B,EAAM8C,KAAKf,OACnBD,MAAO9B,EAAM8C,KAAKhB,SAGkB,CAACK,cAAayB,OH8ChC,WAClB,8CAAO,WAAO/D,GAAP,SAAAC,EAAA,sEACcf,IADd,OAEyB,IAFzB,OAEU0C,YACL5B,EAASoC,EAAgB,KAAM,KAAM,MAAM,IAHhD,2CAAP,wDG/CWiC,CAAgDJ,ICUhDK,I,OA1BC,WACZ,OACI,yBAAKpI,UAAU,WACX,yBAAKA,UAAU,iBACX,kBAAC,KAAD,CAAS8H,GAAG,YAAZ,YAEJ,yBAAK9H,UAAU,iBACX,kBAAC,KAAD,CAAS8H,GAAG,aAAZ,aAEJ,yBAAK9H,UAAU,iBACX,kBAAC,KAAD,CAAS8H,GAAG,SAAZ,SACJ,yBAAK9H,UAAU,iBACX,kBAAC,KAAD,CAAS8H,GAAG,UAAZ,UACJ,yBAAK9H,UAAU,iBACX,kBAAC,KAAD,CAAS8H,GAAG,YAAZ,aAEJ,yBAAK9H,UAAU,iBACX,kBAAC,KAAD,CAAS8H,GAAG,UAAZ,UAEJ,yBAAK9H,UAAU,iBACX,kBAAC,KAAD,CAAS8H,GAAG,UAAZ,a,iDCfDO,GANG,WACd,OAAO,yBAAKC,MAAO,CAACC,gBAAiB,QACjC,yBAAKb,IAAKc,KAAWb,IAAM,0BC6CpBc,I,mNA7CXxE,MAAQ,CACJyE,UAAU,EACVnG,OAAQ,EAAK3C,MAAM2C,Q,EAWvBoG,eAAiB,SAACC,GACd,EAAKC,SAAS,CACVtG,OAAQqG,EAAEE,cAAcC,S,iEAV5Bf,KAAKpI,MAAMoJ,SAAWhB,KAAKa,SAAS,CAACH,UAAU,M,2CAG/CV,KAAKa,SAAU,CACXH,UAAU,IAEdV,KAAKpI,MAAM0C,aAAa0F,KAAK/D,MAAM1B,U,yCAOpB0G,EAAWC,GACtBD,EAAU1G,SAAWyF,KAAKpI,MAAM2C,QAChCyF,KAAKa,SAAS,CACVtG,OAAQyF,KAAKpI,MAAM2C,W,+BAM3B,OACI,yBAAKvC,UAAU,WACTgI,KAAK/D,MAAMyE,UACT,6BACI,0BAAMS,cAAenB,KAAKoB,iBAAiBC,KAAKrB,OAASA,KAAKpI,MAAM2C,QAAU,sCAIrFyF,KAAK/D,MAAMyE,UACZ,6BACI,2BAAO1I,UAAU,SAASsJ,SAAUtB,KAAKW,eAAgBY,WAAW,EAAMC,OAAQxB,KAAKyB,mBAAmBJ,KAAKrB,MAAOe,MAASf,KAAK/D,MAAM1B,e,GAvClI0F,IAAMC,Y,uCC2BnBwB,I,OAFkBC,aAAU,CAAE3C,KAAM,eAAlB2C,EArBT,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,aAAc7G,EAAoB,EAApBA,QAAShD,EAAW,EAAXA,MAC7C,OAAO,0BAAMC,UAAU,kBAAkB6J,SAAUD,GACnD,6BAAK,kDACJ7J,GAAS,yBAAKC,UAAWC,KAAO6J,kBACpB/J,GAEb,yBAAKC,UAAU,iBAAgB,wCAA/B,KAAkDI,aAAY,YAAa,WAAY,GAAID,OAC3F,yBAAKH,UAAU,iBAAgB,gDAA/B,KAA0DI,aAAY,GAAI,iBAAkB,GAAID,KAAO,CAACyD,KAAM,cAC9G,yBAAK5D,UAAU,iBAAgB,qDAA/B,KAA+DI,aAAY,yBAA0B,4BAA6B,GAAIX,OACtI,yBAAKO,UAAU,iBAAgB,uCAA/B,KAAiDI,aAAY,WAAY,UAAW,GAAIX,OAExF,6BACI,uCADJ,KACsBsK,OAAOC,KAAKjH,EAAQkH,UAAUrF,KAAI,SAAAsF,GAChD,OAAO,yBAAKlK,UAAU,mBAAmBkK,IAAKA,GAC1C,2BAAIA,EAAJ,KADG,IACY9J,aAAY8J,EAAK,YAAcA,EAAK,GAAI/J,gBCuBjEgK,GAAU,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aAC3B,OAAO,yBAAKrK,UAAU,oBAAmB,2BAAIoK,GAAtC,KAA0DC,IAGhEC,GAAc,SAAC,GAAsC,IAArCvH,EAAoC,EAApCA,QAASiG,EAA2B,EAA3BA,QAASuB,EAAkB,EAAlBA,aAC9BN,EAAWlH,EAAQkH,SACzB,OAAO,yBAAKjK,UAAU,eACjBgJ,GAAW,6BAAK,4BAAQpB,QAAS2C,GAAjB,SACjB,yBAAKvK,UAAU,aACX,yBAAKA,UAAU,qBAAqB+C,EAAQyH,UAC5C,yBAAKxK,UAAU,wBAAf,aACA,yBAAKA,UAAU,iBAAiB+C,EAAQ0H,SACxC,yBAAKzK,UAAU,iBAAiB+C,EAAQ2H,eAAiB,oBAAsB,IAC/E,yBAAK1K,UAAU,iBAAiB+C,EAAQ4H,4BAE5C,yBAAK3K,UAAU,YACX,uCADJ,KACsB+J,OAAOC,KAAKC,GAAUrF,KAAI,SAAAsF,GACxC,OAAO,kBAAC,GAAD,CAASA,IAAKA,EAAKE,aAAgBF,EAAKG,aAAcJ,EAASC,WAQvEU,GA9DK,SAAChL,GAAS,IAAD,EAEOiL,oBAAS,GAFhB,oBAElBnC,EAFkB,KAERoC,EAFQ,KAIzB,IAAKlL,EAAMmD,QACP,OAAO,kBAAC,GAAD,MAYX,OAEA,yBAAK/C,UAAU,eAEX,yBAAKA,UAAU,iBAAgB,yBAAK0H,IAAK9H,EAAMmD,QAAQsB,OAAO0G,MACpDnL,EAAMmD,QAAQsB,OAAO0G,MACrB,6HAA8HpD,IAAI,sBAEvI/H,EAAMoJ,SAAW,2BAAOhJ,UAAU,YAAY4D,KAAM,OAAQ0F,SAjBzC,SAACV,GACrBA,EAAEoC,OAAOC,MAAMC,QACftL,EAAM6C,UAAUmG,EAAEoC,OAAOC,MAAM,QAkBnC,kBAAC,GAAD,CAAe1I,OAAU3C,EAAM2C,OAAQD,aAAgB1C,EAAM0C,aAAc0G,QAAWpJ,EAAMoJ,UAE3FN,EACK,kBAAC,GAAD,CAAiByC,cAAevL,EAAMmD,QAASA,QAASnD,EAAMmD,QAAS8G,SAlBhE,SAAClH,GACV/C,EAAMkD,YAAYH,GAAUlB,MAAK,WAAKqJ,GAAY,SAkBhD,kBAAC,GAAD,CAAaP,aAAc,WAAMO,GAAY,IAAQ/H,QAASnD,EAAMmD,QAASiG,QAASpJ,EAAMoJ,Y,SC1B3FoC,I,cAVF,SAACxL,GACV,OACI,yBAAKI,UAAU,YACX,yBAAK0H,IAAI,wGAAwGC,IAAI,uDACxH/H,EAAM6D,QACP,0CAAgB7D,EAAMyL,KAAtB,S,SCDFC,GAAcC,aAAiB,IAY/BC,GAAsB7B,aAAU,CAAC3C,KAAM,yBAAjB2C,EAVL,SAAC/J,GACpB,OACI,0BAAMiK,SAAUjK,EAAMgK,cACtB,kBAAC6B,GAAA,EAAD,CAAOjL,UAAWf,KAAUa,KAAK,cAC1BD,YAAY,+BAA+BqL,SAAU,CAACC,KAAUL,MACvE,6BAAK,4BAAQtL,UAAU,OAAlB,iBAuDE4L,GAtBC,SAAChM,GACb,IAAI2D,EAAQ3D,EAAM2D,MAAMqB,KAAI,SAAA5C,GAAI,OAAE,kBAAC,GAAD,CAAMkI,IAAKlI,EAAKwB,GAAIC,QAASzB,EAAKyB,QAAS4H,KAAMrJ,EAAK0B,gBAMxF,OACI,6BACI,wCACA,kBAAC8H,GAAD,CAAqB3B,SAPX,SAACgC,GACfjM,EAAMkM,QAAQD,EAAOzH,gBAQjB,yBAAKpE,UAAU,WACVuD,KCvCFwI,GAFU5D,cAdD,SAAClE,GACrB,MAAO,CACHV,MAAOU,EAAM2C,YAAYrD,MACzBa,YAAaH,EAAM2C,YAAYxC,gBAGZ,SAACN,GACxB,MAAO,CACHgI,QAAS,SAAC1H,GACNN,EfuCwB,SAACM,GAAgB,MAAO,CAACR,KAlD5C,WAkD4DQ,eevCxD4H,CAAqB5H,QAKjB+D,CAA6CyD,ICGvDK,GAhBC,SAACrM,GACb,OACI,yBAAKI,UAAU,WAEX,kBAAC,GAAD,CAAa+C,QAASnD,EAAMmD,QAASR,OAAQ3C,EAAM2C,OACtCD,aAAc1C,EAAM0C,aACpBG,UAAW7C,EAAM6C,UACjBuG,QAASpJ,EAAMoJ,QACflG,YAAalD,EAAMkD,cAEhC,kBAAC,GAAD,CAAkBuE,MAAOzH,EAAMyH,U,SCRrC6E,G,+KAGE,IAAIrK,EAASmG,KAAKpI,MAAMkB,MAAMqL,OAAOtK,OAChCA,IAASA,EAASmG,KAAKpI,MAAMwM,kBAClCpE,KAAKpI,MAAMiE,eAAehC,GAC1BmG,KAAKpI,MAAMyC,UAAUR,K,0CAIrBmG,KAAKqE,mB,yCAGUpD,EAAWC,EAAWoD,GACjCtE,KAAKpI,MAAMkB,MAAMqL,OAAOtK,SAAWoH,EAAUnI,MAAMqL,OAAOtK,QAC1DmG,KAAKqE,mB,+BAKT,OACI,kBAAC,GAAD,iBAAarE,KAAKpI,MAAlB,CACIoJ,SAAUhB,KAAKpI,MAAMkB,MAAMqL,OAAOtK,OAClCkB,QAASiF,KAAKpI,MAAMmD,QACpBR,OAAQyF,KAAKpI,MAAM2C,OACnBD,aAAc0F,KAAKpI,MAAM0C,aACzBG,UAAWuF,KAAKpI,MAAM6C,UACtBK,YAAakF,KAAKpI,MAAMkD,mB,GA3BTmF,IAAMC,WAuCtBd,eACXe,cARkB,SAAClE,GAAD,MAAY,CAC9BlB,QAASkB,EAAM2C,YAAY7D,QAC3BR,OAAQ0B,EAAM2C,YAAYrE,OAC1B6J,iBAAkBnI,EAAM8C,KAAKlF,OAC7BmE,OAAQ/B,EAAM8C,KAAKf,UAIM,CAACnC,iBAAgBxB,UjBoBtB,SAACR,GACrB,8CAAO,WAAOiC,GAAP,eAAAC,EAAA,sEACgB3B,EAAWC,UAAUR,GADrC,OACGF,EADH,OAECmC,EAASH,EAAUhC,IAFpB,2CAAP,uDiBrBqDW,ajB2B9B,SAACC,GACxB,8CAAO,WAAOuB,GAAP,SAAAC,EAAA,+EAEoB3B,EAAWE,aAAaC,GAF5C,OAGyB,IAHzB,OAGUmD,YACL5B,EAASH,EAAUpB,IAJxB,gDAOCL,QAAQC,KAAR,MAPD,yDAAP,uDiB5BmEM,UjBwC/C,SAAC8J,GAAD,8CAAU,WAAOzI,GAAP,eAAAC,EAAA,sEACP3B,EAAWK,UAAU8J,GADd,OAEE,KADtB5K,EADoB,QAEb+D,YACL5B,EAhC6B,CAACF,KArDnB,qBAqD6CS,OAgC9B1C,EAAKA,KAAK0C,SAHlB,2CAAV,uDiBxC0DvB,YjB+CxD,SAACC,GAAD,8CAAa,WAAOe,EAAU0I,GAAjB,iBAAAzI,EAAA,6DAC7BlC,EAAS2K,IAAWzF,KAAKlF,OADI,SAEhBO,EAAWU,YAAYC,GAFP,UAGL,KADxBpB,EAF6B,QAGpB+D,WAHoB,gBAI3B5B,EAASD,EAAehC,IAJG,8BAM3BiC,EAAS2I,YAAW,cAAe,CAACC,OAAQ/K,EAAKgL,SAAS,MAN/B,kBAOpBC,QAAQC,OAAOlL,EAAKgL,SAAS,KAPT,4CAAb,2DiB9CtBG,IACAC,KAHW3F,CAIb8E,ICxCac,I,OARF,WACT,OACI,+CCMOC,I,OARD,WACV,OACI,gDCMOC,I,OARE,WACb,OACI,oDCgEOC,I,OA/DH,SAACvN,GAGT,IAFA,IAAIwN,EAAgBC,KAAKC,KAAK1N,EAAMmF,mBAAqBnF,EAAM2B,UAC3DgM,EAAQ,GACHC,EAAE,EAAGA,GAAGJ,EAAeI,IAC5BD,EAAME,KAAKD,GAGf,IAAIE,EAAgBH,EAAMI,MAAM/N,EAAM0B,YAAY,EAAG,EAAI1B,EAAM0B,YAAY,EAAG,EACxE1B,EAAM0B,YAAY,EAAG,EAAI1B,EAAM0B,YAAY,EAAI,IAErD,OAAO,yBAAKtB,UAAU,SACtB,yBAAKA,UAAU,iBACV0N,EAAc9I,KAAI,SAAAgJ,GACf,OAAO,0BAAM1D,IAAO0D,EAAG5N,UAAYJ,EAAM0B,cAAgBsM,EAAI,eAAiB,cAC9EhG,QAAS,SAACgB,GAAOhJ,EAAMiO,cAAcD,KACnCA,MAGN,uCAAaR,EAAb,WAGJxN,EAAMkF,MAAMF,KAAK,SAAAkJ,GAAC,OAAG,yBAAM9N,UAAY,YAAYkK,IAAK4D,EAAEtK,IACtD,6BACI,6BACI,kBAAC,KAAD,CAASsE,GAAI,YAAYgG,EAAEtK,IACvB,yBAAKkE,IAAKoG,EAAEzJ,OAAO0G,OAAS+C,EAAEzJ,OAAO0J,OAAS,mEAAoE/N,UAAU,YAAY2H,IAAI,gIAGpJ,6BACKmG,EAAElI,SACG,4BAAQ5F,UAAU,SAASgO,SAAUpO,EAAMqF,sBAAsBgJ,MAAK,SAAAzK,GAAE,OAAIA,IAAMsK,EAAEtK,MAClFoE,QAAS,WACLhI,EAAMsO,SAASJ,EAAEtK,MAFvB,YAUA,4BAAQxD,UAAU,SAASgO,SAAUpO,EAAMqF,sBAAsBgJ,MAAK,SAAAzK,GAAE,OAAIA,IAAMsK,EAAEtK,MAClFoE,QAAS,WACLhI,EAAMuO,OAAOL,EAAEtK,MAFrB,YAYd,6BACI,yBAAKxD,UAAU,YAAY8N,EAAExN,MAC7B,6BAAMwN,EAAEvL,OAASuL,EAAEvL,OAAS,0BAC5B,wCAAcuL,EAAEtK,YCrDtB4K,G,4MAaFP,cAAgB,SAACQ,GACb,EAAKzO,MAAMyB,SAASgN,EAAY,EAAKzO,MAAM2B,UAC3C,EAAK3B,MAAM0O,eAAeD,I,kEAZ1BrG,KAAKpI,MAAMyB,SAAS2G,KAAKpI,MAAM0B,YAAa0G,KAAKpI,MAAM2B,Y,+BAuBvD,OAAQ,yBAAKvB,UAAY,WACpBgI,KAAKpI,MAAMoF,WAAa,kBAAC,GAAD,MAAe,KAC5C,kBAAC,GAAD,CACID,mBAAsBiD,KAAKpI,MAAMmF,mBACjCxD,SAAYyG,KAAKpI,MAAM2B,SACvBD,YAAe0G,KAAKpI,MAAM0B,YAC1BuM,cAAiB7F,KAAK6F,cACtBK,SAAYlG,KAAKpI,MAAMsO,SACvBC,OAAUnG,KAAKpI,MAAMuO,OACrBrJ,MAASkD,KAAKpI,MAAMkF,MACpBG,sBAAyB+C,KAAKpI,MAAMqF,6B,GApCnBgD,IAAMC,WA8EpBd,eACXe,cArCkB,SAAClE,GACnB,MAAO,CACHa,MAAOb,EAAM6C,UAAUhC,MACvBvD,SAAU0C,EAAM6C,UAAUvF,SAC1BwD,mBAAoBd,EAAM6C,UAAU/B,mBACpCzD,YAAa2C,EAAM6C,UAAUxF,YAC7B0D,WAAYf,EAAM6C,UAAU9B,WAC5BC,sBAAuBhB,EAAM6C,UAAU7B,yBA8BlB,CAACkJ,OnBWR,SAACtM,GACnB,8CAAO,WAAOiC,GAAP,eAAAC,EAAA,sDACCyB,EAAYpE,EAASW,WAAWsH,KAAKjI,GAEzCmE,EAAmBzB,EAAUjC,EAAQ2D,EADjBN,GAFjB,2CAAP,uDmBZkCgJ,SnBmBd,SAACrM,GACrB,8CAAO,WAAOiC,GAAP,SAAAC,EAAA,sDACHwB,EAAmBzB,EAAUjC,EAAQT,EAASQ,aAAayH,KAAKjI,GAAW+D,GADxE,2CAAP,uDmBpB4CmJ,enBjBlB,SAAChN,GAAD,MAAiB,CAACsC,KA/DvB,mBA+D+CtC,gBmBiBRgE,8BAA6BjE,SnBPrE,SAACC,EAAaC,GAClC,8CAAO,WAAOuC,GAAP,eAAAC,EAAA,6DACHD,EAASuB,GAAiB,IADvB,SAGcjE,EAASC,SAASC,EAAaC,GAH7C,OAGCI,EAHD,OAICmC,EAASuB,GAAiB,IAC1BvB,EAASsB,EAASzD,EAAK6C,QACvBV,EAfkD,CAACF,KAhEjC,wBAgE8DiC,MAejDlE,EAAK4M,aANrC,2CAAP,yDmBOAxB,KAFW3F,CAGbgH,ICtDII,GAAiB7E,aAAU,CAAE3C,KAAM,SAAlB2C,EAzBL,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,aAAc7J,EAAuB,EAAvBA,MAAOkG,EAAgB,EAAhBA,WACrC,OACI,0BAAM4D,SAAUD,GACZ,6BACI,kBAAC6B,GAAA,EAAD,CAAOpL,YAAa,QAASC,KAAM,QAASE,UAAWL,KAAOyD,KAAK,QAAQ8H,SAAU,CAACC,SAE1F,6BACI,kBAACF,GAAA,EAAD,CAAOpL,YAAa,WAAYC,KAAM,WAAYE,UAAWL,KAAOyD,KAAM,WAAY8H,SAAU,CAACC,SAErG,6BACI,kBAACF,GAAA,EAAD,CAAOjL,UAAW,QAASF,KAAM,aAAcsD,KAAM,aADzD,gBAICqC,GAAc,yBAAKyB,IAAKzB,EAAY0B,IAAI,YACxC1B,GAAc7F,aAAY,gBAAiB,UAAW,CAACuL,MAAWxL,MAElEJ,GAAS,yBAAKC,UAAWsI,KAAMwB,kBAC3B/J,GAEL,6BACI,4BAAQC,UAAWsI,KAAMmG,KAAzB,cAwBDtG,iBALS,SAAClE,GAAD,MAAa,CACjCgC,WAAYhC,EAAM8C,KAAKd,WACvBD,OAAQ/B,EAAM8C,KAAKf,UAGiB,CAACD,MnBbpB,SAAC9C,EAAOC,EAAUC,EAAYC,GAC/C,8CAAO,WAAOU,GAAP,iBAAAC,EAAA,sEACcf,EAAcC,EAAOC,EAAUC,EAAYC,GADzD,OAEyB,KADxBzB,EADD,QAEU+D,WACL5B,EAASsC,MAGe,KAApBzE,EAAK+D,YACL5B,EAASuC,KAETqI,EAAe/M,EAAKgL,SAASzB,OAAS,EAAIvJ,EAAKgL,SAAS,GAAK,aACjE7I,EAAS2I,YAAW,QAAS,CAACC,OAAQgC,MAV3C,2CAAP,wDmBYWvG,EAhBD,SAACvI,GAIX,OAAIA,EAAMoG,OAAgB,kBAAC,IAAD,CAAU8B,GAAK,aAClC,6BACH,qCACA,kBAAC0G,GAAD,CAAgB3E,SANH,SAAClH,GACd/C,EAAMmG,MAAMpD,EAASM,MAAON,EAASO,SAAUP,EAASQ,WAAYR,EAASS,UAKzC6C,WAAYrG,EAAMqG,iBC9BxD0I,GAAoB1G,IAAM2G,MAAK,kBAAM,iCA2C5BC,GAzCH,SAACjP,GAEX,OAEI,yBAAKI,UAAU,eACX,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO8O,OAAK,EAACC,KAAK,IACXC,OAAQ,kBAAK,kBAAC,IAAD,CAAUlH,GAAI,gBAClC,kBAAC,IAAD,CAAOiH,KAAK,oBACLC,OAAQ,kBAAI,kBAAC,GAAD,CACR3H,MAAOzH,EAAMyH,WAExB,kBAAC,IAAD,CAAO0H,KAAK,YACLC,OAAQ,WACJ,OAAQ,6BACC,kBAAC,WAAD,CAAUC,SAAU,qFAClB,kBAACN,GAAD,CAAmBtH,MAAOzH,EAAMyH,aAKtD,kBAAC,IAAD,CAAO0H,KAAK,QACLvO,UAAWwM,KAClB,kBAAC,IAAD,CAAO+B,KAAK,SACLvO,UAAWyM,KAClB,kBAAC,IAAD,CAAO8B,KAAK,YACLvO,UAAW0M,KAClB,kBAAC,IAAD,CAAO6B,KAAK,SACLC,OAAU,kBAAI,kBAAC,GAAD,CACV3H,MAAOzH,EAAMyH,WAExB,kBAAC,IAAD,CAAO0H,KAAK,SACLvO,UAAW0O,QCvC9BC,IAASH,OACP,kBAAC,IAAMI,WAAP,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAU/H,MAASA,GACjB,kBAAC,GAAD,SAINgI,SAASC,eAAe,S3B+GtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhO,MAAK,SAAAiO,GACJA,EAAaC,gBAEdC,OAAM,SAAA7P,GACLmC,QAAQnC,MAAMA,EAAM0D,a,gC4BzI5B,oEAAO,IAAMkI,EAAW,SAAA5C,GACpB,IAAIA,EACJ,MAAO,qBAGEwC,EAAmB,SAACsE,GAAD,OAAe,SAAC9G,GAC5C,GAAIA,EAAMmC,OAAS2E,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,sICF9BC,EAA6B,SAAC7L,GAAD,MAAY,CACzC+B,OAAQ/B,EAAM8C,KAAKf,SAGV+G,EAAmB,SAAC7E,GAAe,IACtC6H,EADqC,uKAGnC,OAAK/H,KAAKpI,MAAMoG,OACT,kBAACkC,EAAcF,KAAKpI,OADI,kBAAC,IAAD,CAAUkI,GAAG,eAHT,GACXG,IAAMC,WAStC,OAFqCC,YAAQ2H,EAAR3H,CAAoC4H,K,0GCdzEzM,EAAe,CACfqJ,SACA,CACI,CAAC,GAAK,IAAK,QAAU,eACrB,CAAC,GAAK,IAAK,QAAU,oWAGzBqD,QACA,CACK,CAAC,GAAK,IAAK,KAAO,QAClB,CAAC,GAAK,IAAK,KAAO,SAClB,CAAC,GAAK,IAAK,KAAO,WAClB,CAAC,GAAK,IAAK,KAAO,QAClB,CAAC,GAAK,IAAK,KAAO,SAkBdC,EAA2B,SAACC,GAAD,MAAoB,CAACtM,KAjCxC,eAiC4DsM,mBAGlEvJ,IAhBQ,WAAmC,IAAlC1C,EAAiC,uDAAzBX,EAAcY,EAAW,uCACrD,OAAOA,EAAON,MAEV,IAvBa,eAwBT,IAAIuM,EAAOjM,EAAOgM,eAClB,OAAO,2BAAIjM,GAAX,IACA0I,SAAS,GAAD,mBAAM1I,EAAM0I,UAAZ,CAAsB,CAACnJ,GAAI,EAAGC,QAAS0M,OAGvD,QACI,OAAOlM,M","file":"static/js/main.7b2dab65.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Ripple-1s-200px.a80c5d39.svg\";","import React from 'react'\r\nimport { Field } from 'redux-form';\r\nimport styles from './formsControls.module.css';\r\n\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={styles.formControl +' '+ (hasError ? styles.error : '')}>\r\n            <div><textarea {...input} {...props} /></div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={styles.formControl +' '+ (hasError ? styles.error : '')}>\r\n            <div><input {...input} {...props} /></div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text ='') => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n                name={name}\r\n                validators={validators}\r\n                component={component}\r\n                {...props}\r\n                text={text}\r\n                /> \r\n    </div>\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formsControls_formControl__2gXSH\",\"btn\":\"formsControls_btn__EkWpK\",\"error\":\"formsControls_error__2n2zS\",\"formSummaryError\":\"formsControls_formSummaryError__1sdOZ\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as axios from 'axios';\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {'API-KEY': '63a35e59-4989-4619-99e4-f77b746495a2'}\r\n});\r\n\r\n\r\nexport const usersAPI ={\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    unfollowUser(userId) {\r\n        return instance.delete(`/follow/${userId}`)\r\n        .then(response => response.data)\r\n    },\r\n    followUser(userId) {\r\n        return instance.post(`/follow/${userId}`,{},)\r\n        .then(response => response.data)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Old method. PLS use profileAPI object')\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI ={\r\n    getProfile(userId) {\r\n        return instance.get(`/profile/`+userId)\r\n        .then(response => response.data)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`/profile/status/`+userId)\r\n        .then(response => response.data) \r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`/profile/status`, { status:status })\r\n        .then(response => response.data) \r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile);\r\n        return instance.put(`/profile/photo`, formData, {headers: {\r\n            'Content-Type': 'multipart/form-data'}})\r\n            .then(response => response.data)\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`/profile`, profile)\r\n        .then(response => response.data) \r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`/auth/me`)\r\n        .then(response => response.data)\r\n    },\r\n    login(email, password, rememberMe=false, captcha=null) {\r\n        return instance.post('/auth/login', {email, password, rememberMe, captcha})\r\n        .then(response => response.data)\r\n    },\r\n    logout() {\r\n        return instance.delete('/auth/login')\r\n        .then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get('/security/get-captcha-url')\r\n        .then(response => response.data)\r\n    }\r\n}","import { stopSubmit } from 'redux-form';\r\nimport {profileAPI} from '../api/api'\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\n\r\nlet initialState = {\r\n    posts: \r\n[\r\n    {id:1, message:'Hi, this is first post from myPosts.js', likesCount: 0},\r\n    {id:2, message:'Hi, this is second post from myPosts.js', likesCount: 0},\r\n    {id:3, message:'YOOOOHOOO', likesCount: 0}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText:''\r\n            };\r\n        }\r\n        \r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state, profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n    default:\r\n        return state;\r\n    }\r\n}\r\nexport const addPostActionCreator = (newPostText)=>{ return {type: ADD_POST, newPostText}}\r\n\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\n\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status })\r\n\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile =(userId) => {\r\n    return async (dispatch)=>{\r\n        const data = await profileAPI.getProfile(userId)\r\n            dispatch(setUserProfile(data));                \r\n    }\r\n}\r\n\r\nexport const getStatus =(userId) => {\r\n    return async (dispatch)=>{\r\n        const data = await profileAPI.getStatus(userId)\r\n            dispatch(setStatus(data));                \r\n    }\r\n}\r\n\r\nexport const updateStatus =(status) => {\r\n    return async (dispatch)=>{\r\n        try {        \r\n            const data = await profileAPI.updateStatus(status)\r\n            if (data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n        }catch(error) {\r\n            console.warn(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const savePhoto =(file) => async (dispatch)=>{\r\n        const data = await profileAPI.savePhoto(file)\r\n            if (data.resultCode === 0) {\r\n                dispatch(savePhotoSuccess(data.data.photos));\r\n            }\r\n    }\r\n\r\nexport const saveProfile =(profile) => async (dispatch, getState)=>{\r\n    const userId = getState().auth.userId\r\n    const data = await profileAPI.saveProfile(profile)\r\n          if (data.resultCode === 0) {\r\n            dispatch(getUserProfile(userId))\r\n        } else {\r\n            dispatch(stopSubmit('editProfile', {_error: data.messages[0]}));\r\n            return Promise.reject(data.messages[0]);\r\n        }\r\n}\r\n\r\nexport default profileReducer;\r\n","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) =>{\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","export const updateObjectInArray = (items, itemId, objectPropName, newObjectProps) =>{\r\n    return items.map(item => {\r\n            if (item[objectPropName] === itemId) {\r\n            return {...item, ...newObjectProps}\r\n        }\r\n        return item;\r\n    })\r\n}","\r\nimport {usersAPI} from '../api/api';\r\nimport {updateObjectInArray} from '../utils/object-helpers'\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SETUSERS = 'SETUSERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'TOGGLE_IS_FOLLOWING_IN_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersQuantity: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    isFollowingInProgress: [],\r\n    };\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true}) \r\n/*                  users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user;\r\n                })  - вынес в object-helpers */\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n        case SETUSERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersQuantity: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching:action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_IN_PROGRESS: {\r\n            return {...state, \r\n                isFollowingInProgress: action.isFetching\r\n                ? [...state.isFollowingInProgress, action.userId]\r\n                : state.isFollowingInProgress.filter(id => id !== action.userId) }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId)=> ({type: FOLLOW, userId})\r\n\r\nexport const unfollowSuccess = (userId)=> ({type: UNFOLLOW, userId})\r\n\r\nexport const setUsers = (users)=> ({type: SETUSERS, users})\r\n\r\nexport const setCurrentPage = (currentPage)=> ({type: SET_CURRENT_PAGE, currentPage})\r\n\r\nexport const setTotalUsersQuantity = (totalUsersQuantity) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersQuantity})\r\n\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\n\r\nexport const toggleIsFollowingInProgress = (isFetching, userId) =>({type: TOGGLE_IS_FOLLOWING_IN_PROGRESS, isFetching, userId})\r\n\r\n\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersQuantity(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleIsFollowingInProgress(true, userId))\r\n    let data = await apiMethod(userId)\r\n        if (data.resultCode === 0) {dispatch(actionCreator(userId))};\r\n        dispatch(toggleIsFollowingInProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        let apiMethod = usersAPI.followUser.bind(usersAPI)\r\n        let actionCreator = followSuccess;\r\n        followUnfollowFlow(dispatch, userId, apiMethod, actionCreator)\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollowUser.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import { stopSubmit } from 'redux-form';\r\nimport {authAPI, securityAPI} from '../api/api';\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS'\r\n\r\nlet initialState = {\r\n    userId:  null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS: \r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n               };\r\n\r\n    default:\r\n        return state;\r\n    }\r\n}\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_USER_DATA, data: {userId, email, login, isAuth} });\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({type: GET_CAPTCHA_URL_SUCCESS, data: {captchaUrl}})\r\n\r\nexport const authorizeMe = () => \r\n    async (dispatch) => {\r\n        let data = await authAPI.me();\r\n            if (data.resultCode === 0) {\r\n                    let {id, email, login} = data.data;\r\n                    dispatch(setAuthUserData(id, email, login, true));\r\n            } \r\n    }\r\n\r\n\r\nexport const login = (email, password, rememberMe, captcha) => {\r\n    return async (dispatch) => {\r\n        let data = await authAPI.login(email, password, rememberMe, captcha)\r\n            if (data.resultCode === 0) {\r\n                dispatch(authorizeMe())\r\n            }\r\n            else {\r\n                if (data.resultCode === 10) {\r\n                    dispatch(getCaptchaUrl())\r\n                }\r\n                let errorMessage = data.messages.length > 0 ? data.messages[0] : \"Some error\";\r\n                dispatch(stopSubmit('login', {_error: errorMessage}))\r\n            }\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => {\r\n    return async (dispatch) => {\r\n        const data = await securityAPI.getCaptchaUrl()\r\n        const captchaUrl = data.url\r\n                dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n            \r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        let data = await authAPI.logout()\r\n            if (data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport profileReducer from './profile-reducer';\r\nimport sidebarReducer from './sidebar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMidleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n    messagesPage: dialogsReducer, \r\n    profilePage: profileReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer\r\n\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMidleware)));\r\n\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './header.css'\r\n\r\nconst Header = (props)=>{\r\n    return(\r\n        <header className=\"header\">\r\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTVBOvEYhBKycb7fFt36eBUcKFzyoOawQ6E0Q&usqp=CAU\" alt='site logo is here'/>\r\n            <div className=\"loginBlock\">\r\n                { props.isAuth \r\n                    ? <div>{props.login} * <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink> }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport Header from './header';\r\nimport { connect } from 'react-redux';\r\nimport {authorizeMe, logout} from '../../data/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.authorizeMe()\r\n    }\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {authorizeMe, logout})(HeaderContainer);","import React from 'react';\r\nimport './sideBar.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SideBar = ()=> {\r\n    return (\r\n        <nav className=\"sideBar\">\r\n            <div className=\"sideBar__item\">\r\n                <NavLink to=\"/profile\">Profile</NavLink>\r\n            </div>\r\n            <div className=\"sideBar__item\">\r\n                <NavLink to=\"/messages\">Messages</NavLink>\r\n            </div>\r\n            <div className=\"sideBar__item\">\r\n                <NavLink to=\"/news\">News</NavLink></div>\r\n            <div className=\"sideBar__item\">\r\n                <NavLink to=\"/music\">Music</NavLink></div>\r\n            <div className=\"sideBar__item\">\r\n                <NavLink to=\"settings\">Settings</NavLink>\r\n            </div>\r\n            <div className=\"sideBar__item\">\r\n                <NavLink to=\"/users\">Users</NavLink>\r\n            </div>\r\n            <div className=\"sideBar__item\">\r\n                <NavLink to=\"/login\">Login</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default SideBar;","import React from 'react';\r\nimport preloader from '../../../assets/images/Ripple-1s-200px.svg';\r\n\r\nconst Preloader = () => {\r\n    return <div style={{backgroundColor: \"red\"}}>\r\n        <img src={preloader} alt = \"loading in progress\"/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport './profileStatus.css'\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activateEditMode() {\r\n        this.props.isOwner && this.setState({editMode: true})\r\n    }\r\n    deactivateEditMode() {\r\n        this.setState( {\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n   \r\n    render() {\r\n        return (\r\n            <div className='status'>\r\n                {!this.state.editMode && \r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode.bind(this)} >{this.props.status || 'too lazy to add status. Or Young?'}</span>\r\n                    </div>\r\n                }\r\n\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input className='status' onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode.bind(this)} value = {this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus","import React from 'react';\r\nimport {reduxForm } from 'redux-form';\r\nimport {createField, Input, Textarea} from '../../../common/formsControls/formsControls'\r\nimport styles from '../../../common/formsControls/formsControls.module.css'\r\nimport './profileDataForm.css'\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form className='profileDataForm' onSubmit={handleSubmit}>\r\n    <div><button>Save and Exit</button></div>\r\n    {error && <div className={styles.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n    <div className=\"userAboutItem\"><b>Full name</b>: {createField('Full name', \"fullName\", [], Input)}</div>\r\n    <div className=\"userAboutItem\"><b>Looking for a job</b>: {createField('', \"lookingForAJob\", [], Input, {type: 'checkbox'})}</div>\r\n    <div className=\"userAboutItem\"><b>My professional skills</b>: {createField('My professional skills', \"lookingForAJobDescription\", [], Textarea)}</div>\r\n    <div className=\"userAboutItem\"><b>About me</b>: {createField('About me', \"aboutMe\", [], Textarea)}</div>\r\n   \r\n    <div>\r\n        <b>CONTACTS</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div className=\"userContactsItem\" key={key}> \r\n                <b>{key}:</b> {createField(key, \"contacts.\" + key, [], Input)}\r\n            </div>\r\n        })}\r\n    </div>\r\n</form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'editProfile' })(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, { useState } from 'react';\r\nimport './profileInfo.css';\r\nimport Preloader from '../../../common/preloader/preloader';\r\nimport ProfileStatus from './profileStatus';\r\nimport ProfileDataForm from './profileDataForm';\r\n\r\n\r\nconst ProfileInfo = (props)=>{\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n            }\r\n        }\r\n    const onSubmit = (formData) => {\r\n            props.saveProfile(formData).then(()=>{setEditMode(false)})\r\n        }\r\n\r\n    return(\r\n\r\n    <div className=\"profileInfo\">\r\n\r\n        <div className=\"mainUserPhoto\"><img src={props.profile.photos.large \r\n                ? props.profile.photos.large \r\n                : 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcR01mUdp62kN2vyu7FWyXLNKdhJSrjnnHsdfQ&usqp=CAU\"alt=\"my profile logo'} alt=\"users logo if any\" /> \r\n        \r\n            {props.isOwner && <input className='savePhoto' type={'file'} onChange={onMainPhotoSelected}/>}\r\n        </div>\r\n\r\n        <ProfileStatus status = {props.status} updateStatus = {props.updateStatus} isOwner = {props.isOwner}/>\r\n\r\n        {editMode \r\n            ? <ProfileDataForm initialValues={props.profile} profile={props.profile} onSubmit = {onSubmit}/> \r\n            : <ProfileData goToEditMode={()=> {setEditMode(true)}} profile={props.profile} isOwner={props.isOwner} /> }\r\n    </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n     return <div className=\"userContactsItem\"><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    const contacts = profile.contacts;\r\n    return <div className='profileData'>\r\n        {isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\r\n        <div className=\"userAbout\">\r\n            <div className=\"userAboutItemName\">{profile.fullName}</div>\r\n            <div className=\"userAboutItemHeading\">About me:</div>\r\n            <div className=\"userAboutItem\">{profile.aboutMe}</div>\r\n            <div className=\"userAboutItem\">{profile.lookingForAJob ? 'Looking for a job' : '' }</div>\r\n            <div className=\"userAboutItem\">{profile.lookingForAJobDescription}</div>\r\n        </div>\r\n        <div className='contacts'>\r\n            <b>CONTACTS</b>: {Object.keys(contacts).map(key => {\r\n                return <Contact key={key} contactTitle = {key} contactValue={contacts[key]} />\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default ProfileInfo;\r\n\r\n\r\n","import React from 'react';\r\nimport './post.css'\r\n\r\nconst Post = (props)=> {\r\n    return (\r\n        <div className=\"postItem\">\r\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQFp3uCMFT-t3WKaunzc5iJMMNDiwDmz4q4CA&usqp=CAU\" alt=\"чья-то ава\"/>\r\n        {props.message}\r\n        <span> * like: {props.like} *</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport './myPosts.css'\r\nimport Post from './post/post';\r\nimport {required, maxLengthCreator} from '../../../../utils/validators/validators';\r\nimport {Textarea} from '../../../common/formsControls/formsControls'\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n        <Field component={Textarea} name='newPostText' \r\n               placeholder='What are you thinking about?' validate={[required, maxLength30]}/>\r\n        <div><button className='btn'>ADD POST</button></div>\r\n    </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n\r\n/* class MyPosts extends PureComponent { - сразу включает в себя метод shpuldComponentUpdate()\r\n\r\n   \r\n    render() {\r\n           \r\n        console.log('render')\r\n    let posts = this.props.posts.map(post=><Post key={post.id} message={post.message} like={post.likesCount}/>)\r\n    \r\n    const onAddPost = (values) => {\r\n        this.props.addPost(values.newPostText)\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n       \r\n            <div className=\"newPost\">\r\n                {posts}\r\n            </div>\r\n        </div>\r\n    \r\n    )\r\n}\r\n} */\r\n\r\nconst MyPosts = (props) => {\r\n    let posts = props.posts.map(post=><Post key={post.id} message={post.message} like={post.likesCount}/>)\r\n    \r\n    const onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n       \r\n            <div className=\"newPost\">\r\n                {posts}\r\n            </div>\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\n\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from '../../../../data/profile-reducer';\r\nimport MyPosts from './myPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText)=> {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts); \r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport './profile.css'\r\nimport ProfileInfo from './my-profile-info/profileInfo';\r\nimport MyPostsContainer from './my-posts/myPostsContainer';\r\n\r\n\r\nconst Profile = (props)=>{\r\n    return(\r\n        <div className='content'>\r\n\r\n            <ProfileInfo profile={props.profile} status={props.status} \r\n                         updateStatus={props.updateStatus} \r\n                         savePhoto={props.savePhoto} \r\n                         isOwner={props.isOwner}\r\n                         saveProfile={props.saveProfile}\r\n                         />\r\n            <MyPostsContainer store={props.store} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './profile';\r\nimport { connect } from 'react-redux';\r\nimport {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile} from '../../../data/profile-reducer'\r\nimport { withRouter } from 'react-router-dom';\r\nimport {withAuthRedirect} from '../../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {userId = this.props.authorizedUserID;  /* 11633 */};\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Profile {...this.props} \r\n                isOwner={!this.props.match.params.userId}\r\n                profile={this.props.profile} \r\n                status={this.props.status} \r\n                updateStatus={this.props.updateStatus}\r\n                savePhoto={this.props.savePhoto}\r\n                saveProfile={this.props.saveProfile} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserID: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n/* let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\nlet ProfileContainerWithUrl = withRouter(AuthRedirectComponent);\r\n\r\nexport default connect(mapStateToProps, {getUserProfile})(ProfileContainerWithUrl); */","import React from 'react';\r\nimport './news.css';\r\n\r\nconst News = ()=> {\r\n    return (\r\n        <div>\r\n            My news here\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport './music.css';\r\n\r\nconst Music = ()=>{\r\n    return (\r\n        <div>\r\n            My music here\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport './settings.css';\r\n\r\nconst Settings = ()=>{\r\n    return (\r\n        <div>\r\n            Settings ase here\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './users.css';\r\n\r\n\r\n\r\nlet Users = (props) => {\r\n    let pagesQuantity = Math.ceil(props.totalUsersQuantity / props.pageSize);\r\n    let pages = [];\r\n    for (let i=1; i<=pagesQuantity; i++) {\r\n        pages.push(i);\r\n    }\r\n    \r\n    let selectedPages = pages.slice(props.currentPage-5 >0 ? props.currentPage-5: 0\r\n        , props.currentPage-5 >0 ? props.currentPage+5 : 10);\r\n\r\n    return <div className='users'>\r\n    <div className='usersQuantity'>\r\n        {selectedPages.map(p => {\r\n            return <span key = {p} className={(props.currentPage === p)? 'selectedPage' : 'currentPage'}  \r\n            onClick={(e)=> { props.onPageChanged(p) } }\r\n            >{p}</span>\r\n        })\r\n        }\r\n        <span>TOTAL {pagesQuantity} PAGES</span>\r\n    </div>\r\n{\r\n    props.users.map( u=> <div  className = 'userField' key={u.id}>\r\n        <div>\r\n            <div>\r\n                <NavLink to={'/profile/'+u.id}>\r\n                    <img src={u.photos.large || u.photos.small || 'https://shapka-youtube.ru/wp-content/uploads/2018/10/spartan.png'} className='userPhoto' alt='аватарка пользователя'/>\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {u.followed \r\n                    ? <button className='btn-sm' disabled={props.isFollowingInProgress.some(id => id ===u.id)} \r\n                        onClick={()=>{\r\n                            props.unfollow(u.id)\r\n/*                        props.toggleIsFollowingInProgress(true, u.id)\r\n                        usersAPI.unfollowUser(u.id)\r\n                            .then(data => {\r\n                                    if (data.resultCode === 0) {props.unfollow(u.id)};\r\n                                    props.toggleIsFollowingInProgress(false, u.id);\r\n                                })  */\r\n                        }}>Unfollow</button> \r\n                    : <button className='btn-sm' disabled={props.isFollowingInProgress.some(id => id ===u.id)} \r\n                        onClick={()=>{\r\n                            props.follow(u.id)\r\n/*                        props.toggleIsFollowingInProgress(true, u.id)\r\n                        usersAPI.followUser(u.id)\r\n                                .then(data => {\r\n                                    if (data.resultCode === 0) {props.follow(u.id)};\r\n                                    props.toggleIsFollowingInProgress(false, u.id)\r\n                                }) */\r\n                        }}>Follow</button>}\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <div className='userName'>{u.name}</div>\r\n            <div>{u.status ? u.status : 'too lazy to add status'}</div>\r\n            <div>user ID {u.id}</div>\r\n        </div>\r\n    </div> )\r\n}\r\n</div> \r\n}\r\n\r\n\r\nexport default Users;","import React from 'react';\r\nimport Users from './users';\r\nimport {connect} from 'react-redux';\r\nimport { follow, unfollow, setCurrentPage, toggleIsFollowingInProgress, getUsers} from '../../data/users-reducer';\r\nimport Preloader from '../common/preloader/preloader';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n/*         this.props.toggleIsFetching(true);\r\n        usersAPI.getUsers(this.props.currentPage, this.props.pageSize)\r\n            .then(data => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(data.items);\r\n                this.props.setTotalUsersQuantity(data.totalCount);          \r\n        }) */\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n        this.props.setCurrentPage(pageNumber);\r\n/*        this.props.toggleIsFetching(true);\r\n\r\n        usersAPI.getUsers(pageNumber, this.props.pageSize)\r\n            .then(data => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(data.items);\r\n        })*  */\r\n    }\r\n   \r\n    render() {\r\n        return  <div className = 'content'>       \r\n            {this.props.isFetching ? <Preloader/> : null} \r\n        <Users \r\n            totalUsersQuantity = {this.props.totalUsersQuantity}\r\n            pageSize = {this.props.pageSize}\r\n            currentPage = {this.props.currentPage}\r\n            onPageChanged = {this.onPageChanged}\r\n            unfollow = {this.props.unfollow}\r\n            follow = {this.props.follow}\r\n            users = {this.props.users}\r\n            isFollowingInProgress = {this.props.isFollowingInProgress}\r\n            />\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersQuantity: state.usersPage.totalUsersQuantity,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        isFollowingInProgress: state.usersPage.isFollowingInProgress\r\n    }\r\n}\r\n\r\n/* let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId))\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setTotalUsersQuantity: (totalQuantity) => {\r\n            dispatch(setTotalUsersQuantityAC(totalQuantity))\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetchingAC(isFetching))\r\n        }\r\n    }\r\n} \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);\r\n*/\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleIsFollowingInProgress, getUsers}),\r\n    withAuthRedirect\r\n)(UsersContainer)\r\n\r\n/* export default withAuthRedirect(connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleIsFollowingInProgress,\r\n    getUsers\r\n    })(UsersContainer)); */","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {required} from '../../utils/validators/validators'\r\nimport { connect } from 'react-redux';\r\nimport {login} from '../../data/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport style from '../common/formsControls/formsControls.module.css'\r\nimport {createField, Input} from '../common/formsControls/formsControls'\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Email'} name={'email'} component={Input} type='email' validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'Password'} name={'password'} component={Input} type={'password'} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field component={'input'} name={'rememberMe'} type={'checkbox'}/> remember me\r\n            </div>\r\n\r\n            {captchaUrl && <img src={captchaUrl} alt='Captcha'/> }\r\n            {captchaUrl && createField('Enter symbols', \"captcha\", [required], Input)}\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button className={style.btn}>Login</button>\r\n            </div>\r\n        </form>\r\n    )}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n    if (props.isAuth) {return <Redirect to ={'/profile'}/>}\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n    </div>\r\n} \r\n\r\nconst mapStateToProps = (state) => ( {\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);\r\n","import React, {Suspense} from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom';\n\nimport './App.css';\nimport './utils/styleNone.css'\nimport HeaderContainer from './components/header/headerContainer';\nimport SideBar from './components/side-bar/sideBar';\nimport ProfileContainer from './components/pages/profile/profileContainer';\nimport News from './components/pages/news/news';\nimport Music from './components/pages/music/music';\nimport Settings from './components/pages/settings/settings';\nimport UsersContainer from './components/users/usersContainer';\nimport Login from './components/login/login';\n\n//import MessagesContainer from './components/pages/messages/messagesContainer';\nconst MessagesContainer = React.lazy(() => import('./components/pages/messages/messagesContainer'));\n\nconst App = (props) => {\n     \n  return (      \n    \n      <div className=\"app-wrapper\">\n          <HeaderContainer/>\n          <SideBar/>\n          <Switch>\n              <Route exact path=\"/\"\n                     render={()=> <Redirect to={\"/profile\"} /> } />\n              <Route path=\"/profile/:userId?\" \n                     render={()=><ProfileContainer \n                         store={props.store}/>\n                  }/>\n              <Route path=\"/messages\" \n                     render={()=> {\n                         return (<div>\n                                  <Suspense fallback={<div>Загрузка...</div>}>\n                                    <MessagesContainer store={props.store}  />\n                                  </Suspense>\n                                </div>);\n                     } \n                  }/>\n              <Route path=\"/news\" \n                     component={News}/>\n              <Route path=\"/music\" \n                     component={Music}/>\n              <Route path=\"/settings\" \n                     component={Settings}/>\n              <Route path=\"/users\" \n                     render = {()=><UsersContainer\n                         store={props.store}\n                         />}/>\n              <Route path=\"/login\"\n                     component={Login}/>\n           </Switch>\n\n      </div> \n  );\n}\n\nexport default App;\n","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from './data/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter, HashRouter} from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\n\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <HashRouter>\n        <Provider store = {store}>\n          <App />\n        </Provider>\n      </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n  )\n\n\n\n\n\nserviceWorker.unregister();\n","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: \r\n    [\r\n        {'id':'1', 'message':'Hello world'},\r\n        {'id':'2', 'message':'К сожалению сервер не поддерживает отправку и получение сообщений.'}, \r\n        ], \r\n  \r\n    dialogs: \r\n    [\r\n         {'id':'1', 'name':'Anna'},\r\n         {'id':'2', 'name':'Boris'}, \r\n         {'id':'3', 'name':'Charlie'}, \r\n         {'id':'4', 'name':'Dima'}, \r\n         {'id':'5', 'name':'Eva'}\r\n         ], \r\n\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n       \r\n        case SEND_MESSAGE: \r\n            let body = action.newMessageBody;\r\n            return {...state,\r\n            messages: [...state.messages, {id: 6, message: body}],\r\n        }\r\n\r\n    default: \r\n        return state;\r\n    }\r\n}\r\nexport const sendMessageActionCreator = (newMessageBody)=> ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;"],"sourceRoot":""}