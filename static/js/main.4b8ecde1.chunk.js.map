{"version":3,"sources":["assets/images/Ripple-1s-200px.svg","serviceWorker.js","api/api.js","data/profile-reducer.js","data/sidebar-reducer.js","utils/object-helpers.js","data/users-reducer.js","data/auth-reducer.js","data/redux-store.js","components/header/header.js","components/header/headerContainer.js","components/side-bar/sideBar.js","components/common/preloader/preloader.js","components/pages/profile/my-profile-info/profileStatus.js","components/pages/profile/my-profile-info/profileInfo.js","components/pages/profile/my-posts/post/post.js","components/pages/profile/my-posts/myPosts.js","components/pages/profile/my-posts/myPostsContainer.js","components/pages/profile/profile.js","components/pages/profile/profileContainer.js","components/pages/news/news.js","components/pages/music/music.js","components/pages/settings/settings.js","components/users/users.js","components/users/usersContainer.js","components/login/login.js","App.js","index.js","components/common/formsControls/formsControls.module.css","utils/validators/validators.js","components/common/formsControls/formsControls.js","hoc/withAuthRedirect.js","data/dialogs-reducer.js"],"names":["module","exports","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","unfollowUser","userId","delete","followUser","post","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","initialState","posts","id","message","likesCount","profile","setUserProfile","type","setStatus","profileReducer","state","action","newPost","newPostText","sidebarReducer","updateObjectInArray","items","itemId","objectPropName","newObjectProps","map","item","users","totalUsersQuantity","isFetching","isFollowingInProgress","followSuccess","unfollowSuccess","setUsers","toggleIsFetching","toggleIsFollowingInProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","login","isAuth","setAuthUserData","authorizeMe","authReducer","reducers","combineReducers","messagesPage","dialogsReducer","profilePage","sidebar","usersPage","auth","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMidleware","Header","props","className","src","alt","onClick","logout","to","HeaderContainer","this","React","Component","connect","SideBar","Preloader","style","backgroundColor","preloader","ProfileStatus","editMode","onStatusChange","e","setState","currentTarget","value","prevProps","prevState","onDoubleClick","activateEditMode","bind","onChange","autoFocus","onBlur","deactivateEditMode","ProfileInfo","contacts","photos","large","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","facebook","website","vk","twitter","instagram","github","Post","like","maxLength30","maxLengthCreator","AddNewPostFormRedux","reduxForm","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","log","key","values","addPost","MyPostsContainer","addPostActionCreator","Profile","ProfileContainer","params","authorizedUserID","getUserProfile","withRouter","withAuthRedirect","News","Music","Settings","Users","pagesQuantity","Math","ceil","pages","i","push","selectedPages","slice","p","onPageChanged","u","small","disabled","some","unfollow","follow","UsersContainer","pageNumber","setCurrentPage","totalCount","LoginReduxForm","error","Input","formSummaryError","errorMessage","messages","length","stopSubmit","_error","formData","MessagesContainer","lazy","App","path","render","fallback","Login","ReactDOM","StrictMode","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","maxLength","input","meta","hasError","touched","styles","formControl","mapStateToPropsForRedirect","RedirectComponent","dialogs","sendMessageActionCreator","newMessageBody","body"],"mappings":"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","file":"static/js/main.4b8ecde1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Ripple-1s-200px.a80c5d39.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as axios from 'axios';\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {'API-KEY': '63a35e59-4989-4619-99e4-f77b746495a2'}\r\n});\r\n\r\n\r\nexport const usersAPI ={\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    unfollowUser(userId) {\r\n        return instance.delete(`/follow/${userId}`)\r\n        .then(response => response.data)\r\n    },\r\n    followUser(userId) {\r\n        return instance.post(`/follow/${userId}`,{},)\r\n        .then(response => response.data)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Old method. PLS use profileAPI object')\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI ={\r\n    getProfile(userId) {\r\n        return instance.get(`/profile/`+userId)\r\n        .then(response => response.data)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`/profile/status/`+userId)\r\n        .then(response => response.data) \r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`/profile/status`, { status:status })\r\n        .then(response => response.data) \r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`/auth/me`)\r\n        .then(response => response.data)\r\n    },\r\n    login(email, password, rememberMe=false) {\r\n        return instance.post('/auth/login', {email, password, rememberMe})\r\n        .then(response => response.data)\r\n    },\r\n    logout() {\r\n        return instance.delete('/auth/login')\r\n        .then(response => response.data)\r\n    }\r\n}","import {profileAPI} from '../api/api'\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    posts: \r\n[\r\n    {id:1, message:'Hi, this is first post from myPosts.js', likesCount: 0},\r\n    {id:2, message:'Hi, this is second post from myPosts.js', likesCount: 0},\r\n    {id:3, message:'YOOOOHOOO', likesCount: 0}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText:''\r\n            };\r\n        }\r\n        \r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        }\r\n    default:\r\n        return state;\r\n    }\r\n}\r\nexport const addPostActionCreator = (newPostText)=>{\r\n    return {\r\n        type: ADD_POST, newPostText\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\n\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status })\r\n\r\nexport const getUserProfile =(userId) => {\r\n    return async (dispatch)=>{\r\n        let data = await profileAPI.getProfile(userId)\r\n            dispatch(setUserProfile(data));                \r\n    }\r\n}\r\n\r\nexport const getStatus =(userId) => {\r\n    return async (dispatch)=>{\r\n        let data = await profileAPI.getStatus(userId)\r\n            dispatch(setStatus(data));                \r\n    }\r\n}\r\n\r\nexport const updateStatus =(status) => {\r\n    return async (dispatch)=>{\r\n        let data = await profileAPI.updateStatus(status)\r\n            if (data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) =>{\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","export const updateObjectInArray = (items, itemId, objectPropName, newObjectProps) =>{\r\n    return items.map(item => {\r\n            if (item[objectPropName] === itemId) {\r\n            return {...item, ...newObjectProps}\r\n        }\r\n        return item;\r\n    })\r\n}","\r\nimport {usersAPI} from '../api/api';\r\nimport {updateObjectInArray} from '../utils/object-helpers'\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SETUSERS = 'SETUSERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'TOGGLE_IS_FOLLOWING_IN_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersQuantity: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    isFollowingInProgress: [],\r\n    };\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true}) \r\n/*                  users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user;\r\n                })  - вынес в object-helpers */\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n        case SETUSERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersQuantity: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching:action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_IN_PROGRESS: {\r\n            return {...state, \r\n                isFollowingInProgress: action.isFetching\r\n                ? [...state.isFollowingInProgress, action.userId]\r\n                : state.isFollowingInProgress.filter(id => id !== action.userId) }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId)=> ({type: FOLLOW, userId})\r\n\r\nexport const unfollowSuccess = (userId)=> ({type: UNFOLLOW, userId})\r\n\r\nexport const setUsers = (users)=> ({type: SETUSERS, users})\r\n\r\nexport const setCurrentPage = (currentPage)=> ({type: SET_CURRENT_PAGE, currentPage})\r\n\r\nexport const setTotalUsersQuantity = (totalUsersQuantity) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersQuantity})\r\n\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\n\r\nexport const toggleIsFollowingInProgress = (isFetching, userId) =>({type: TOGGLE_IS_FOLLOWING_IN_PROGRESS, isFetching, userId})\r\n\r\n\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersQuantity(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleIsFollowingInProgress(true, userId))\r\n    let data = await apiMethod(userId)\r\n        if (data.resultCode === 0) {dispatch(actionCreator(userId))};\r\n        dispatch(toggleIsFollowingInProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        let apiMethod = usersAPI.followUser.bind(usersAPI)\r\n        let actionCreator = followSuccess;\r\n        followUnfollowFlow(dispatch, userId, apiMethod, actionCreator)\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollowUser.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import { stopSubmit } from 'redux-form';\r\nimport {authAPI} from '../api/api';\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\n\r\nlet initialState = {\r\n    userId:  null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USER_DATA:   \r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n               };\r\n\r\n    default:\r\n        return state;\r\n    }\r\n}\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_USER_DATA, data: {userId, email, login, isAuth} });\r\n\r\n/* export const authorizeMe = () => {\r\n    return (dispatch) => {\r\n        authAPI.me()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    let {id, email, login} = data.data;\r\n                    dispatch(setAuthUserData(id, email, login, true));\r\n                }\r\n            })\r\n    }\r\n} */\r\n\r\nexport const authorizeMe = () => \r\n    async (dispatch) => {\r\n        let data = await authAPI.me();\r\n            if (data.resultCode === 0) {\r\n                    let {id, email, login} = data.data;\r\n                    dispatch(setAuthUserData(id, email, login, true));\r\n            } \r\n    }\r\n\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n    return async (dispatch) => {\r\n        let data = await authAPI.login(email, password, rememberMe)\r\n            if (data.resultCode === 0) {\r\n                dispatch(authorizeMe())\r\n            }\r\n            else {\r\n                let errorMessage = data.messages.length > 0 ? data.messages[0] : \"Some error\";\r\n                dispatch(stopSubmit('login', {_error: errorMessage}))\r\n            }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        let data = await authAPI.logout()\r\n            if (data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport profileReducer from './profile-reducer';\r\nimport sidebarReducer from './sidebar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMidleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n    messagesPage: dialogsReducer, \r\n    profilePage: profileReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer\r\n\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMidleware)));\r\n\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './header.css'\r\n\r\nconst Header = (props)=>{\r\n    return(\r\n        <header className=\"header\">\r\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTVBOvEYhBKycb7fFt36eBUcKFzyoOawQ6E0Q&usqp=CAU\" alt='site logo is here'/>\r\n            <div className=\"loginBlock\">\r\n                { props.isAuth \r\n                    ? <div>{props.login} * <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink> }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport Header from './header';\r\nimport { connect } from 'react-redux';\r\nimport {authorizeMe, logout} from '../../data/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.authorizeMe()\r\n    }\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {authorizeMe, logout})(HeaderContainer);","import React from 'react';\r\nimport './sideBar.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SideBar = ()=> {\r\n    return (\r\n        <nav className=\"sideBar\">\r\n            <div className=\"sideBar__item\">\r\n                <NavLink to=\"/profile\">Profile</NavLink>\r\n            </div>\r\n            <div className=\"sideBar__item\">\r\n                <NavLink to=\"/messages\">Messages</NavLink>\r\n            </div>\r\n            <div className=\"sideBar__item\">\r\n                <NavLink to=\"/news\">News</NavLink></div>\r\n            <div className=\"sideBar__item\">\r\n                <NavLink to=\"/music\">Music</NavLink></div>\r\n            <div className=\"sideBar__item\">\r\n                <NavLink to=\"settings\">Settings</NavLink>\r\n            </div>\r\n            <div className=\"sideBar__item\">\r\n                <NavLink to=\"/users\">Users</NavLink>\r\n            </div>\r\n            <div className=\"sideBar__item\">\r\n                <NavLink to=\"/login\">Login</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default SideBar;","import React from 'react';\r\nimport preloader from '../../../assets/images/Ripple-1s-200px.svg';\r\n\r\nconst Preloader = () => {\r\n    return <div style={{backgroundColor: \"red\"}}>\r\n        <img src={preloader} alt = \"loading in progress\"/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activateEditMode() {\r\n        this.setState( {\r\n            editMode: true\r\n            } )\r\n    }\r\n    deactivateEditMode() {\r\n        this.setState( {\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n   \r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode && \r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode.bind(this)} >{this.props.status || 'too lazy to add status. Or Young?'}</span>\r\n                    </div>\r\n                }\r\n\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode.bind(this)} value = {this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus","import React from 'react';\r\nimport './profileInfo.css';\r\nimport Preloader from '../../../common/preloader/preloader';\r\nimport ProfileStatus from './profileStatus';\r\n\r\n\r\n\r\nconst ProfileInfo = (props)=>{\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const contacts = props.profile.contacts;\r\n\r\n    return(\r\n    <div className=\"profileInfo\">\r\n\r\n        <div className=\"userPhoto\"><img src={props.profile.photos.large ? props.profile.photos.large : 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcR01mUdp62kN2vyu7FWyXLNKdhJSrjnnHsdfQ&usqp=CAU\"alt=\"my profile logo'} alt=\"users logo if any\" /> </div>\r\n        <div className=\"userAbout\">\r\n            <div className=\"userAboutItemName\">{props.profile.fullName}</div>\r\n            <div className=\"userAboutItemHeading\">About me:</div>\r\n            <div className=\"userAboutItem\">{props.profile.aboutMe}</div>\r\n            <div className=\"userAboutItem\">{props.profile.lookingForAJob ? 'Looling for a job' : '' }</div>\r\n            <div className=\"userAboutItem\">{props.profile.lookingForAJobDescription}</div>\r\n        </div>\r\n        <ProfileStatus status = {props.status} updateStatus = {props.updateStatus}/>\r\n        <ul className=\"userContacts\"> Contacts:\r\n            <li className=\"userContactsItem\">facebook: {contacts.facebook}</li>\r\n            <li className=\"userContactsItem\">website: {contacts.website}</li>\r\n            <li className=\"userContactsItem\">vk: {contacts.vk}</li>\r\n            <li className=\"userContactsItem\">twitter: {contacts.twitter}</li>\r\n            <li className=\"userContactsItem\">instagram: {contacts.instagram}</li>\r\n            <li className=\"userContactsItem\">github: {contacts.github}</li>\r\n        </ul>\r\n\r\n        {/* Хорошая ава с медведем <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcR01mUdp62kN2vyu7FWyXLNKdhJSrjnnHsdfQ&usqp=CAU\"alt=\"my profile logo\"/> */}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n\r\n\r\n","import React from 'react';\r\nimport './post.css'\r\n\r\nconst Post = (props)=> {\r\n    return (\r\n        <div className=\"postItem\">\r\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQFp3uCMFT-t3WKaunzc5iJMMNDiwDmz4q4CA&usqp=CAU\" alt=\"чья-то ава\"/>\r\n        {props.message}\r\n        <span> * like: {props.like} *</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport './myPosts.css'\r\nimport Post from './post/post';\r\nimport {required, maxLengthCreator} from '../../../../utils/validators/validators';\r\nimport {Textarea} from '../../../common/formsControls/formsControls'\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n        <Field component={Textarea} name='newPostText' \r\n               placeholder='What are you thinking about?' validate={[required, maxLength30]}/>\r\n        <div><button>ADD POST</button></div>\r\n    </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n\r\n/* class MyPosts extends PureComponent { - сразу включает в себя метод shpuldComponentUpdate()\r\n\r\n   \r\n    render() {\r\n           \r\n        console.log('render')\r\n    let posts = this.props.posts.map(post=><Post key={post.id} message={post.message} like={post.likesCount}/>)\r\n    \r\n    const onAddPost = (values) => {\r\n        this.props.addPost(values.newPostText)\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n       \r\n            <div className=\"newPost\">\r\n                {posts}\r\n            </div>\r\n        </div>\r\n    \r\n    )\r\n}\r\n} */\r\n\r\nconst MyPosts = (props) => {\r\n    console.log('render')\r\n    let posts = props.posts.map(post=><Post key={post.id} message={post.message} like={post.likesCount}/>)\r\n    \r\n    const onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n       \r\n            <div className=\"newPost\">\r\n                {posts}\r\n            </div>\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\n\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from '../../../../data/profile-reducer';\r\nimport MyPosts from './myPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText)=> {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts); \r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport './profile.css'\r\nimport ProfileInfo from './my-profile-info/profileInfo';\r\nimport MyPostsContainer from './my-posts/myPostsContainer';\r\n\r\n\r\nconst Profile = (props)=>{\r\n    return(\r\n        <div className='content'>\r\n\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer store={props.store} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './profile';\r\nimport { connect } from 'react-redux';\r\nimport {getUserProfile, getStatus, updateStatus} from '../../../data/profile-reducer'\r\nimport { withRouter } from 'react-router-dom';\r\nimport {withAuthRedirect} from '../../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {userId = this.props.authorizedUserID;  /* 11633 */};\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Profile {...this.props} \r\n                profile={this.props.profile} \r\n                status={this.props.status} \r\n                updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserID: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n/* let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\nlet ProfileContainerWithUrl = withRouter(AuthRedirectComponent);\r\n\r\nexport default connect(mapStateToProps, {getUserProfile})(ProfileContainerWithUrl); */","import React from 'react';\r\nimport './news.css';\r\n\r\nconst News = ()=> {\r\n    return (\r\n        <div>\r\n            My news here\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport './music.css';\r\n\r\nconst Music = ()=>{\r\n    return (\r\n        <div>\r\n            My music here\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport './settings.css';\r\n\r\nconst Settings = ()=>{\r\n    return (\r\n        <div>\r\n            Settings ase here\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './users.css';\r\n\r\n\r\n\r\nlet Users = (props) => {\r\n    let pagesQuantity = Math.ceil(props.totalUsersQuantity / props.pageSize);\r\n    let pages = [];\r\n    for (let i=1; i<=pagesQuantity; i++) {\r\n        pages.push(i);\r\n    }\r\n    \r\n    let selectedPages = pages.slice(props.currentPage-5 >0 ? props.currentPage-5: 0\r\n        , props.currentPage-5 >0 ? props.currentPage+5 : 10);\r\n\r\n    return <div className='users'>\r\n    <div className='usersQuantity'>\r\n        {selectedPages.map(p => {\r\n            return <span key = {p} className={(props.currentPage === p)? 'selectedPage' : 'currentPage'}  \r\n            onClick={(e)=> { props.onPageChanged(p) } }\r\n            >{p}</span>\r\n        })\r\n        }\r\n        <span>TOTAL {pagesQuantity} PAGES</span>\r\n    </div>\r\n{\r\n    props.users.map( u=> <div  className = 'userField' key={u.id}>\r\n        <div>\r\n            <div>\r\n                <NavLink to={'/profile/'+u.id}>\r\n                    <img src={u.photos.large || u.photos.small || 'https://shapka-youtube.ru/wp-content/uploads/2018/10/spartan.png'} className='userPhoto' alt='аватарка пользователя'/>\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {u.followed \r\n                    ? <button disabled={props.isFollowingInProgress.some(id => id ===u.id)} \r\n                        onClick={()=>{\r\n                            props.unfollow(u.id)\r\n/*                        props.toggleIsFollowingInProgress(true, u.id)\r\n                        usersAPI.unfollowUser(u.id)\r\n                            .then(data => {\r\n                                    if (data.resultCode === 0) {props.unfollow(u.id)};\r\n                                    props.toggleIsFollowingInProgress(false, u.id);\r\n                                })  */\r\n                        }}>Unfollow</button> \r\n                    : <button disabled={props.isFollowingInProgress.some(id => id ===u.id)} \r\n                        onClick={()=>{\r\n                            props.follow(u.id)\r\n/*                        props.toggleIsFollowingInProgress(true, u.id)\r\n                        usersAPI.followUser(u.id)\r\n                                .then(data => {\r\n                                    if (data.resultCode === 0) {props.follow(u.id)};\r\n                                    props.toggleIsFollowingInProgress(false, u.id)\r\n                                }) */\r\n                        }}>Follow</button>}\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <div className='userName'>{u.name}</div>\r\n            <div>{u.status ? u.status : 'too lazy to add status'}</div>\r\n            <div>user ID {u.id}</div>\r\n        </div>\r\n    </div> )\r\n}\r\n</div> \r\n}\r\n\r\n\r\nexport default Users;","import React from 'react';\r\nimport Users from './users';\r\nimport {connect} from 'react-redux';\r\nimport { follow, unfollow, setCurrentPage, toggleIsFollowingInProgress, getUsers} from '../../data/users-reducer';\r\nimport Preloader from '../common/preloader/preloader';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n/*         this.props.toggleIsFetching(true);\r\n        usersAPI.getUsers(this.props.currentPage, this.props.pageSize)\r\n            .then(data => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(data.items);\r\n                this.props.setTotalUsersQuantity(data.totalCount);          \r\n        }) */\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n        this.props.setCurrentPage(pageNumber);\r\n/*        this.props.toggleIsFetching(true);\r\n\r\n        usersAPI.getUsers(pageNumber, this.props.pageSize)\r\n            .then(data => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(data.items);\r\n        })*  */\r\n    }\r\n   \r\n    render() {\r\n        return  <div className = 'content'>       \r\n            {this.props.isFetching ? <Preloader/> : null} \r\n        <Users \r\n            totalUsersQuantity = {this.props.totalUsersQuantity}\r\n            pageSize = {this.props.pageSize}\r\n            currentPage = {this.props.currentPage}\r\n            onPageChanged = {this.onPageChanged}\r\n            unfollow = {this.props.unfollow}\r\n            follow = {this.props.follow}\r\n            users = {this.props.users}\r\n            isFollowingInProgress = {this.props.isFollowingInProgress}\r\n            />\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersQuantity: state.usersPage.totalUsersQuantity,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        isFollowingInProgress: state.usersPage.isFollowingInProgress\r\n    }\r\n}\r\n\r\n/* let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId))\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setTotalUsersQuantity: (totalQuantity) => {\r\n            dispatch(setTotalUsersQuantityAC(totalQuantity))\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetchingAC(isFetching))\r\n        }\r\n    }\r\n} \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);\r\n*/\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleIsFollowingInProgress, getUsers}),\r\n    withAuthRedirect\r\n)(UsersContainer)\r\n\r\n/* export default withAuthRedirect(connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleIsFollowingInProgress,\r\n    getUsers\r\n    })(UsersContainer)); */","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {Input} from '../common/formsControls/formsControls'\r\nimport {required} from '../../utils/validators/validators'\r\nimport { connect } from 'react-redux';\r\nimport {login} from '../../data/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport style from '../common/formsControls/formsControls.module.css'\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Email'} name={'email'} component={Input} type='email' validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'Password'} name={'password'} component={Input} type={'password'} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field component={'input'} name={'rememberMe'} type={'checkbox'}/> remember me\r\n            </div>\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {return <Redirect to ={'/profile'}/>}\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n} \r\n\r\nconst mapStateToProps = (state) => ( {\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);\r\n","import React, {Suspense} from 'react';\nimport {Route} from 'react-router-dom';\n\nimport './App.css';\nimport HeaderContainer from './components/header/headerContainer';\nimport SideBar from './components/side-bar/sideBar';\nimport ProfileContainer from './components/pages/profile/profileContainer';\nimport News from './components/pages/news/news';\nimport Music from './components/pages/music/music';\nimport Settings from './components/pages/settings/settings';\nimport UsersContainer from './components/users/usersContainer';\nimport Login from './components/login/login';\n\n//import MessagesContainer from './components/pages/messages/messagesContainer';\nconst MessagesContainer = React.lazy(() => import('./components/pages/messages/messagesContainer'));\n\nconst App = (props) => {\n     \n  return (      \n    \n      <div className=\"app-wrapper\">\n          <HeaderContainer/>\n          <SideBar/>\n          <Route path=\"/profile/:userId?\" \n                 render={()=><ProfileContainer \n                     store={props.store}/>\n              }/>\n          <Route path=\"/messages\" \n                 render={()=> {\n                     return (<div>\n                              <Suspense fallback={<div>Загрузка...</div>}>\n                                <MessagesContainer store={props.store}  />\n                              </Suspense>\n                            </div>);\n                 } \n              }/>\n          <Route path=\"/news\" \n                 component={News}/>\n          <Route path=\"/music\" \n                 component={Music}/>\n          <Route path=\"/settings\" \n                 component={Settings}/>\n          <Route path=\"/users\" \n                 render = {()=><UsersContainer\n                     store={props.store}\n                     />}/>\n          <Route path=\"/login\"\n                 component={Login}/>\n\n      </div> \n  );\n}\n\nexport default App;\n","import './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from './data/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\n\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Provider store = {store}>\n          <App />\n        </Provider>\n      </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n  )\n\n\n\n\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formsControls_formControl__2gXSH\",\"error\":\"formsControls_error__2n2zS\",\"formSummaryError\":\"formsControls_formSummaryError__1sdOZ\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n","import React from 'react'\r\nimport styles from './formsControls.module.css';\r\n\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={styles.formControl +' '+ (hasError ? styles.error : '')}>\r\n            <div><textarea {...input} {...props} /></div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={styles.formControl +' '+ (hasError ? styles.error : '')}>\r\n            <div><input {...input} {...props} /></div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: \r\n    [\r\n        {'id':'1', 'message':'Hello world'},\r\n        {'id':'2', 'message':'This is second message'}, \r\n        {'id':'3', 'message':'This is third message'}, \r\n        {'id':'4', 'message':'I am realy cool!'},\r\n        ], \r\n  \r\n    dialogs: \r\n    [\r\n         {'id':'1', 'name':'Anna'},\r\n         {'id':'2', 'name':'Boris'}, \r\n         {'id':'3', 'name':'Charlie'}, \r\n         {'id':'4', 'name':'Dima'}, \r\n         {'id':'5', 'name':'Eva'}\r\n         ], \r\n\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n       \r\n        case SEND_MESSAGE: \r\n            let body = action.newMessageBody;\r\n            return {...state,\r\n            messages: [...state.messages, {id: 6, message: body}],\r\n        }\r\n\r\n    default: \r\n        return state;\r\n    }\r\n}\r\nexport const sendMessageActionCreator = (newMessageBody)=> ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;"],"sourceRoot":""}